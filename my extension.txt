<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Interactive Ironman Wallpaper â€” Clickable AIs & Dock</title>
  <style>
    /* Reset */
    html,body{height:100%;margin:0;font-family:Inter,system-ui,Segoe UI,Roboto,Arial}
    /* Fullscreen background */
    .bg{
      position:fixed;inset:0;background-image: url('/mnt/data/94ef4378-ed01-4d5f-826d-cd6e13f04035.webp');
      background-size:cover;background-position:center;z-index:0;filter:contrast(0.95) saturate(1.05)
    }

    /* Overlay container for interactive elements */
    .ui{position:fixed;inset:0;z-index:2;pointer-events:none}

    /* Heart hotspot (approx center). Change left/top to reposition. */
    #heart-hotspot{
      position:absolute;left:50%;top:50%;transform:translate(-50%,-45%); /* tweak top for perfect placement */
      width:180px;height:180px;border-radius:50%;pointer-events:auto;display:flex;align-items:center;justify-content:center;
      transition:box-shadow .18s ease;}
    #heart-hotspot:hover{box-shadow:0 0 40px rgba(0,170,255,0.25)}

    /* Radial menu that appears when hovering/clicking the heart */
    .radial{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);width:420px;height:420px;pointer-events:none}
    .radial .btn{position:absolute;width:64px;height:64px;border-radius:12px;background:rgba(255,255,255,0.06);backdrop-filter: blur(6px);
      display:flex;align-items:center;justify-content:center;cursor:pointer;pointer-events:auto;border:1px solid rgba(255,255,255,0.06)}
    .radial .btn img{width:44px;height:44px;object-fit:contain}

    /* Hidden by default */
    .radial.hidden{opacity:0;transform:translate(-50%,-50%) scale(.9);transition:opacity .18s,transform .18s}
    .radial.show{opacity:1;transform:translate(-50%,-50%) scale(1);transition:opacity .12s,transform .12s}

    /* Small control panel */
    .control{position:fixed;right:18px;top:18px;pointer-events:auto;background:rgba(0,0,0,0.45);padding:10px;border-radius:10px;border:1px solid rgba(255,255,255,0.06)}
    .control button{background:transparent;color:#fff;border:0;padding:6px 8px;margin:2px;cursor:pointer}

    /* Time display */
    .clock{position:fixed;right:22px;top:86px;color:#fff;font-weight:600;text-align:right;pointer-events:auto}
    .clock .time{font-size:28px;letter-spacing:1px}
    .clock .date{font-size:12px;opacity:0.75}

    /* Bottom dock */
    .dock{position:fixed;left:50%;bottom:28px;transform:translateX(-50%);display:flex;gap:12px;padding:8px 12px;border-radius:14px;background:rgba(0,0,0,0.38);pointer-events:auto;border:1px solid rgba(255,255,255,0.04)}
    .dock .app{width:56px;height:56px;border-radius:10px;display:flex;align-items:center;justify-content:center;background:rgba(255,255,255,0.03);cursor:pointer}
    .dock .app img{width:40px;height:40px;object-fit:contain}

    /* Modal */
    .modal{position:fixed;inset:0;display:flex;align-items:center;justify-content:center;background:rgba(0,0,0,0.5);pointer-events:auto}
    .panel{background:#0e0e0f;padding:18px;border-radius:10px;color:#fff;min-width:320px;border:1px solid rgba(255,255,255,0.04)}
    .row{display:flex;gap:8px;margin-bottom:8px}
    .row input{flex:1;padding:8px;border-radius:6px;border:1px solid rgba(255,255,255,0.06);background:transparent;color:#fff}
    .panel button{padding:8px 10px;border-radius:6px;border:0;background:#0aa6ff;color:#012}

    /* Small helper text */
    .hint{position:fixed;left:18px;bottom:22px;color:white;opacity:0.8;background:rgba(0,0,0,0.36);padding:8px;border-radius:8px;pointer-events:auto}

    @media (max-width:700px){
      .radial{width:300px;height:300px}
      #heart-hotspot{width:120px;height:120px}
      .dock{gap:8px}
    }
  </style>
</head>
<body>
  <div class="bg" aria-hidden="true"></div>
  <div class="ui">

    <!-- Heart hotspot & radial menu -->
    <div id="heart-hotspot" title="Open AI launcher"></div>
    <div id="radial" class="radial hidden" aria-hidden="true"></div>

    <!-- Clock & controls -->
    <div class="control">
      <button id="open-add-ai">+ Add AI</button>
      <button id="open-add-app">+ Add App</button>
      <button id="reset-data">Reset</button>
    </div>
    <div class="clock">
      <div class="time" id="time">--:--</div>
      <div class="date" id="date">Loading...</div>
    </div>

    <!-- Dock -->
    <div id="dock" class="dock" aria-label="App dock"></div>

    <div class="hint">Tip: Hover or click the heart to show your AIs. Use the control buttons to add items.</div>
  </div>

  <!-- Modal templates -->
  <template id="modal-add-ai">
    <div class="modal">
      <div class="panel">
        <h3>Add AI shortcut</h3>
        <div class="row"><input id="ai-name" placeholder="Name (eg ChatGPT)" /></div>
        <div class="row"><input id="ai-url" placeholder="URL (must start with https://)" /></div>
        <div class="row"><input id="ai-icon" placeholder="Icon URL (or leave blank for text)" /></div>
        <div style="text-align:right"><button id="save-ai">Save</button> <button id="cancel-ai">Cancel</button></div>
      </div>
    </div>
  </template>

  <template id="modal-add-app">
    <div class="modal">
      <div class="panel">
        <h3>Add Dock App</h3>
        <div class="row"><input id="app-name" placeholder="Name (eg Gmail)" /></div>
        <div class="row"><input id="app-url" placeholder="URL (https://...)" /></div>
        <div class="row"><input id="app-icon" placeholder="Icon URL (png/svg)" /></div>
        <div style="text-align:right"><button id="save-app">Save</button> <button id="cancel-app">Cancel</button></div>
      </div>
    </div>
  </template>

  <script>
    // Helpers
    const get = k=>JSON.parse(localStorage.getItem(k) || 'null')
    const set = (k,v)=>localStorage.setItem(k,JSON.stringify(v))

    // Defaults
    const DEFAULT_AIS = [
      {name:'ChatGPT',url:'https://chat.openai.com/',icon:''},
      {name:'Bing AI',url:'https://www.bing.com/new',icon:''},
      {name:'Claude',url:'https://claude.ai/',icon:''}
    ]
    const DEFAULT_APPS = [
      {name:'Gmail',url:'https://mail.google.com/',icon:''},
      {name:'YouTube',url:'https://www.youtube.com/',icon:''}
    ]

    let ais = get('wall_ais') || DEFAULT_AIS
    let apps = get('wall_apps') || DEFAULT_APPS

    const radial = document.getElementById('radial')
    const hotspot = document.getElementById('heart-hotspot')
    const dock = document.getElementById('dock')

    function renderRadial(){
      radial.innerHTML = ''
      const centerX = 210, centerY = 210, radius = 130
      const N = ais.length
      ais.forEach((a,i)=>{
        const angle = (i/N) * Math.PI*2 - Math.PI/2
        const x = centerX + Math.cos(angle)*radius - 32
        const y = centerY + Math.sin(angle)*radius - 32
        const btn = document.createElement('div')
        btn.className='btn'
        btn.style.left = x+'px'
        btn.style.top = y+'px'
        btn.title = a.name
        if(a.icon){
          const img = document.createElement('img'); img.src = a.icon; img.alt = a.name
          btn.appendChild(img)
        } else {
          btn.textContent = a.name.slice(0,10)
          btn.style.fontSize = '12px'; btn.style.color='#fff'
        }
        btn.addEventListener('click', e=>{ window.open(a.url,'_blank') })
        // right-click to edit
        btn.addEventListener('contextmenu', e=>{e.preventDefault(); openEditAi(i)})
        radial.appendChild(btn)
      })
    }

    function renderDock(){
      dock.innerHTML=''
      apps.forEach((a,i)=>{
        const el = document.createElement('div'); el.className='app'; el.title=a.name
        if(a.icon){const im=document.createElement('img');im.src=a.icon;im.alt=a.name;el.appendChild(im)} else {el.textContent = a.name.slice(0,8); el.style.color='#fff'}
        el.addEventListener('click', ()=>window.open(a.url,'_blank'))
        el.addEventListener('contextmenu', e=>{e.preventDefault(); openEditApp(i)})
        dock.appendChild(el)
      })
    }

    // Show/hide radial menu on hover and click
    let showTimeout, hideTimeout
    function showRadial(){ clearTimeout(hideTimeout); radial.classList.remove('hidden'); radial.classList.add('show') }
    function hideRadial(){ clearTimeout(showTimeout); hideTimeout = setTimeout(()=>{ radial.classList.remove('show'); radial.classList.add('hidden') },220) }

    hotspot.addEventListener('mouseenter', ()=>{ showRadial() })
    hotspot.addEventListener('mouseleave', ()=>{ hideRadial() })
    radial.addEventListener('mouseenter', ()=>{ clearTimeout(hideTimeout) })
    radial.addEventListener('mouseleave', ()=>{ hideRadial() })

    // Clicking toggles (mobile friendly)
    hotspot.addEventListener('click', ()=>{ radial.classList.toggle('show'); radial.classList.toggle('hidden') })

    // Clock
    function updateClock(){
      const t = new Date();
      const hh = String(t.getHours()).padStart(2,'0')
      const mm = String(t.getMinutes()).padStart(2,'0')
      document.getElementById('time').textContent = `${hh}:${mm}`
      document.getElementById('date').textContent = t.toLocaleString(undefined,{weekday:'long',day:'numeric',month:'short',year:'numeric'})
    }
    setInterval(updateClock,1000); updateClock()

    // Add/edit AI modal
    function openModal(template){
      const node = template.content.cloneNode(true)
      document.body.appendChild(node)
    }

    function openAddAi(){
      openModal(document.getElementById('modal-add-ai'))
      const cancel = document.getElementById('cancel-ai'); const save = document.getElementById('save-ai')
      cancel.onclick = ()=>document.querySelector('.modal').remove()
      save.onclick = ()=>{
        const name = document.getElementById('ai-name').value.trim(); const url = document.getElementById('ai-url').value.trim(); const icon = document.getElementById('ai-icon').value.trim()
        if(!name || !url) return alert('Provide name and URL (https://...)')
        ais.push({name,url,icon}); set('wall_ais',ais); renderRadial(); document.querySelector('.modal').remove()
      }
    }

    function openAddApp(){
      openModal(document.getElementById('modal-add-app'))
      const cancel = document.getElementById('cancel-app'); const save = document.getElementById('save-app')
      cancel.onclick = ()=>document.querySelector('.modal').remove()
      save.onclick = ()=>{
        const name = document.getElementById('app-name').value.trim(); const url = document.getElementById('app-url').value.trim(); const icon = document.getElementById('app-icon').value.trim()
        if(!name || !url) return alert('Provide name and URL')
        apps.push({name,url,icon}); set('wall_apps',apps); renderDock(); document.querySelector('.modal').remove()
      }
    }

    function openEditAi(index){
      openModal(document.getElementById('modal-add-ai'))
      document.getElementById('ai-name').value = ais[index].name
      document.getElementById('ai-url').value = ais[index].url
      document.getElementById('ai-icon').value = ais[index].icon
      document.getElementById('save-ai').onclick = ()=>{
        ais[index].name = document.getElementById('ai-name').value.trim()
        ais[index].url = document.getElementById('ai-url').value.trim()
        ais[index].icon = document.getElementById('ai-icon').value.trim()
        set('wall_ais',ais); renderRadial(); document.querySelector('.modal').remove()
      }
      document.getElementById('cancel-ai').onclick = ()=>document.querySelector('.modal').remove()
    }

    function openEditApp(index){
      openModal(document.getElementById('modal-add-app'))
      document.getElementById('app-name').value = apps[index].name
      document.getElementById('app-url').value = apps[index].url
      document.getElementById('app-icon').value = apps[index].icon
      document.getElementById('save-app').onclick = ()=>{
        apps[index].name = document.getElementById('app-name').value.trim()
        apps[index].url = document.getElementById('app-url').value.trim()
        apps[index].icon = document.getElementById('app-icon').value.trim()
        set('wall_apps',apps); renderDock(); document.querySelector('.modal').remove()
      }
      document.getElementById('cancel-app').onclick = ()=>document.querySelector('.modal').remove()
    }

    // Controls
    document.getElementById('open-add-ai').addEventListener('click', openAddAi)
    document.getElementById('open-add-app').addEventListener('click', openAddApp)
    document.getElementById('reset-data').addEventListener('click', ()=>{ if(confirm('Reset saved AIs and apps?')){ localStorage.removeItem('wall_ais'); localStorage.removeItem('wall_apps'); location.reload() } })

    // Initial render
    renderRadial(); renderDock();

    // Save before unload
    window.addEventListener('beforeunload', ()=>{ set('wall_ais',ais); set('wall_apps',apps) })

    // Accessibility: allow keyboard focus to show radial
    hotspot.tabIndex = 0
    hotspot.addEventListener('focus', showRadial)
    hotspot.addEventListener('blur', hideRadial)

    // On first run, store defaults
    if(!get('wall_ais')) set('wall_ais',ais)
    if(!get('wall_apps')) set('wall_apps',apps)

  </script>
</body>
</html>
